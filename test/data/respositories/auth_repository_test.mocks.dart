// Mocks generated by Mockito 5.4.6 from annotations
// in app4_receitas/test/data/respositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:app4_receitas/data/services/auth_service.dart' as _i2;
import 'package:app4_receitas/utils/app_error.dart' as _i5;
import 'package:either_dart/either.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:supabase_flutter/supabase_flutter.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i2.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.AppError, _i6.AuthResponse>> get s =>
      (super.noSuchMethod(
            Invocation.getter(#s),
            returnValue:
                _i3.Future<_i4.Either<_i5.AppError, _i6.AuthResponse>>.value(
                  _i7.dummyValue<_i4.Either<_i5.AppError, _i6.AuthResponse>>(
                    this,
                    Invocation.getter(#s),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.AppError, _i6.AuthResponse>>);

  @override
  _i3.Stream<_i6.AuthState> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i3.Stream<_i6.AuthState>.empty(),
          )
          as _i3.Stream<_i6.AuthState>);

  @override
  set s(_i3.Future<_i4.Either<_i5.AppError, _i6.AuthResponse>>? _s) => super
      .noSuchMethod(Invocation.setter(#s, _s), returnValueForMissingStub: null);

  @override
  _i3.Future<_i4.Either<_i5.AppError, _i6.AuthResponse>> signInWithPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue:
                _i3.Future<_i4.Either<_i5.AppError, _i6.AuthResponse>>.value(
                  _i7.dummyValue<_i4.Either<_i5.AppError, _i6.AuthResponse>>(
                    this,
                    Invocation.method(#signInWithPassword, [], {
                      #email: email,
                      #password: password,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.AppError, _i6.AuthResponse>>);

  @override
  _i3.Future<_i4.Either<_i5.AppError, Map<String, dynamic>?>> fetchUserProfile(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchUserProfile, [userId]),
            returnValue:
                _i3.Future<
                  _i4.Either<_i5.AppError, Map<String, dynamic>?>
                >.value(
                  _i7.dummyValue<
                    _i4.Either<_i5.AppError, Map<String, dynamic>?>
                  >(this, Invocation.method(#fetchUserProfile, [userId])),
                ),
          )
          as _i3.Future<_i4.Either<_i5.AppError, Map<String, dynamic>?>>);

  @override
  _i3.Future<dynamic> signUp({
    required String? email,
    required String? password,
    required String? username,
    required String? avatarUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
              #username: username,
              #avatarUrl: avatarUrl,
            }),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  dynamic ignUp({
    required String? email,
    required String? password,
    required String? username,
    required String? avatarUrl,
  }) => super.noSuchMethod(
    Invocation.method(#ignUp, [], {
      #email: email,
      #password: password,
      #username: username,
      #avatarUrl: avatarUrl,
    }),
  );

  @override
  _i3.Future<_i4.Either<_i5.AppError, void>> singOut() =>
      (super.noSuchMethod(
            Invocation.method(#singOut, []),
            returnValue: _i3.Future<_i4.Either<_i5.AppError, void>>.value(
              _i7.dummyValue<_i4.Either<_i5.AppError, void>>(
                this,
                Invocation.method(#singOut, []),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.AppError, void>>);
}
